#ifndef _ANDROID_AGENT_HECI_H_
#define _ANDROID_AGENT_HECI_H_

#define UINT32 uint32_t
#define UINT8 uint8_t

#pragma pack(0)
//10C4F8F7-650B-4878-A5C5-740FD475769A
const GUID ANDROID_HECI_AGENT_GUID =
    { 0x10c4f8f7, 0x650b, 0x4878, {0xa5, 0xc5, 0x74, 0xf, 0xd4, 0x75, 0x76,
				   0x9a}
};

#pragma pack()
#define ANDROID_HECI_KEYMASTER_KEY_OPAQUE_SIZE                    0
#define ANDROID_HECI_KEYMASTER_PUBLIC_EXPONENT_MAX_SIZE           4


#ifndef BIT
#define BIT(x) (1 << (x))
#endif


#define ANDROID_HECI_AGENT_CMD_VERSION                            1
#define ANDROID_HECI_KEYMASTER_INTERFACE_VERSION                  1
#define ANDROID_HECI_KEYMASTER_MAX_KEY_SIZE                       256

#define ANDROID_HECI_AGENT_MAX_MTU                                4096
#ifdef __cplusplus
extern "C" {
#endif				/*  __cplusplus */

	typedef enum {
		ANDROID_HECI_AGENT_RESPONSE_CODE_SUCCESS = 0x00000000,
		ANDROID_HECI_AGENT_RESPONSE_CODE_FAILURE = 0x00000001,
		ANDROID_HECI_AGENT_RESPONSE_CODE_INVALID_PARAMS =
		    0x00000002,
		ANDROID_HECI_AGENT_RESPONSE_CODE_NOT_SUPPORTED =
		    0x00000003,
		ANDROID_HECI_AGENT_RESPONSE_CODE_UNKNOWN_CMD = 0x00000004,
		ANDROID_HECI_AGENT_RESPONSE_INVALID_MSG_FORMAT = 0x00000005
	} ANDROID_HECI_AGENT_RESPONSE_CODE;

	typedef enum {
		ANDROID_HECI_AGENT_CMD_CLASS_GENERAL = 0x00000000,
		ANDROID_HECI_AGENT_CMD_CLASS_KEY_MASTER = 0x00000001,
		ANDROID_HECI_AGENT_CMD_CLASS_MAX
	} ANDROID_HECI_AGENT_CMD_CLASS;

	typedef enum {
		ANDROID_HECI_GENERAL_CMD_ID_GET_SUPPORTED_CLASSES =
		    0x00000000,
		ANDROID_HECI_GENERAL_CMD_ID_MAX
	} ANDROID_HECI_GENERAL_CMD_ID;

	typedef enum {
		ANDROID_HECI_KEYMASTER_CMD_ID_GET_CAPS = 0x00000000,
		ANDROID_HECI_KEYMASTER_CMD_ID_RSA_GEN_KEY = 0x00000001,
		ANDROID_HECI_KEYMASTER_CMD_ID_RSA_IMPORT_KEY = 0x00000002,
		ANDROID_HECI_KEYMASTER_CMD_ID_RSA_GET_PUBLIC_KEY =
		    0x00000003,
		ANDROID_HECI_KEYMASTER_CMD_ID_RSA_DELETE_ALL_KEYS =
		    0x00000004,
		ANDROID_HECI_KEYMASTER_CMD_ID_RSA_SIGN_DATA_NOPAD =
		    0x00000005,
		ANDROID_HECI_KEYMASTER_CMD_ID_RSA_VERIFY_DATA_NOPAD =
		    0x00000006,
		ANDROID_HECI_KEYMASTER_CMD_ID_MAX
	} ANDROID_HECI_KEYMASTER_CMD_ID;

	typedef struct {
		UINT32 CmdClass;
		UINT32 CmdId;
		UINT32 InputSize;
	} ANDROID_HECI_AGENT_REQ_HEADER;

	typedef struct {
		UINT32 ClientVersion;
		UINT32 CmdClass;
		UINT32 CmdId;
		UINT32 ResponseCode;
		UINT32 OutputSize;
	} ANDROID_HECI_AGENT_RESP_HEADER;

	typedef enum {
		ANDROID_HECI_KEYMASTER_KEY_TYPE_RSA,
		ANDROID_HECI_KEYMASTER_KEY_TYPE_DSA,
		ANDROID_HECI_KEYMASTER_KEY_TYPE_EC
	} ANDROID_HECI_KEYMASTER_KEY_TYPE;

	typedef enum {
		ANDROID_HECI_KEYMASTER_RSA_KEY_SIZE_512 = BIT(0),
		ANDROID_HECI_KEYMASTER_RSA_KEY_SIZE_1024 = BIT(1),
		ANDROID_HECI_KEYMASTER_RSA_KEY_SIZE_2048 = BIT(2)

	} ANDROID_HECI_KEYMASTER_RSA_KEY_SIZE;

	typedef struct {
		UINT32 Type;
		UINT32 Length;
		UINT8 Value[0];
	} ANDROID_HECI_KEYMASTER_KEY_CAPS;

	typedef struct {
		UINT32 KeySizes;
		UINT32 KeyOpaqueSize;
	} ANDROID_HECI_KEYMASTER_RSA_CAPS_PARAMS;

	typedef struct {
		ANDROID_HECI_AGENT_REQ_HEADER Header;
	} ANDROID_HECI_CMD_GET_SUPPORTED_CLASSES_REQUEST;

	typedef struct {
		ANDROID_HECI_AGENT_RESP_HEADER Header;
		UINT32 NumClasses;
		UINT32 Classes[0];
	} ANDROID_HECI_CMD_GET_SUPPORTED_CLASSES_RESPONSE;


	typedef struct {
		ANDROID_HECI_AGENT_REQ_HEADER Header;
	} ANDROID_HECI_KEYMASTER_CMD_GET_CAPS_REQUEST;

	typedef struct {
		ANDROID_HECI_AGENT_RESP_HEADER Header;
		UINT32 InterfaceVersion;
		UINT32 NumAlgs;
		ANDROID_HECI_KEYMASTER_KEY_CAPS KeyCapabilities[0];
	} ANDROID_HECI_KEYMASTER_CMD_GET_CAPS_RESPONSE;

	typedef struct {
		ANDROID_HECI_AGENT_REQ_HEADER Header;
		UINT32 KeySize;
		UINT8 PublicExponent[ANDROID_HECI_KEYMASTER_PUBLIC_EXPONENT_MAX_SIZE];	// In big-endian
	} ANDROID_HECI_KEYMASTER_CMD_RSA_GEN_KEY_REQUEST;

	typedef struct {
		ANDROID_HECI_AGENT_RESP_HEADER Header;
		UINT8 KeyOpaque[ANDROID_HECI_KEYMASTER_KEY_OPAQUE_SIZE];
	} ANDROID_HECI_KEYMASTER_CMD_RSA_GEN_KEY_RESPONSE;

	typedef struct {
		ANDROID_HECI_AGENT_REQ_HEADER Header;
		UINT32 KeySize;
		UINT8 PublicExponent[ANDROID_HECI_KEYMASTER_PUBLIC_EXPONENT_MAX_SIZE];	// In big-endian
		UINT8 Modulus[ANDROID_HECI_KEYMASTER_MAX_KEY_SIZE];	// In big-endian
		UINT8 PrivateExponent[ANDROID_HECI_KEYMASTER_MAX_KEY_SIZE];	// In big-endian
	} ANDROID_HECI_KEYMASTER_CMD_RSA_IMPORT_KEY_REQUEST;

	typedef struct {
		ANDROID_HECI_AGENT_RESP_HEADER Header;
		UINT8 KeyOpaque[ANDROID_HECI_KEYMASTER_KEY_OPAQUE_SIZE];
	} ANDROID_HECI_KEYMASTER_CMD_RSA_IMPORT_KEY_RESPONSE;

	typedef struct {
		ANDROID_HECI_AGENT_REQ_HEADER Header;
		UINT8 KeyOpaque[ANDROID_HECI_KEYMASTER_KEY_OPAQUE_SIZE];
	} ANDROID_HECI_KEYMASTER_CMD_RSA_GET_PUBLIC_KEY_REQUEST;

	typedef struct {
		ANDROID_HECI_AGENT_RESP_HEADER Header;
		UINT32 KeySize;
		UINT8 PublicExponent[ANDROID_HECI_KEYMASTER_PUBLIC_EXPONENT_MAX_SIZE];	// In big-endian
		UINT8 Modulus[ANDROID_HECI_KEYMASTER_MAX_KEY_SIZE];	// In big-endian
	} ANDROID_HECI_KEYMASTER_CMD_RSA_GET_PUBLIC_KEY_RESPONSE;

	typedef struct {
		ANDROID_HECI_AGENT_REQ_HEADER Header;
	} ANDROID_HECI_KEYMASTER_CMD_RSA_DELETE_ALL_KEYS_REQUEST;

	typedef struct {
		ANDROID_HECI_AGENT_RESP_HEADER Header;
	} ANDROID_HECI_KEYMASTER_CMD_RSA_DELETE_ALL_KEYS_RESPONSE;

	typedef struct {
		ANDROID_HECI_AGENT_REQ_HEADER Header;
		UINT32 DataSize;
		UINT8 Data[ANDROID_HECI_KEYMASTER_MAX_KEY_SIZE];
		UINT8 KeyOpaque[ANDROID_HECI_KEYMASTER_KEY_OPAQUE_SIZE];
	} ANDROID_HECI_KEYMASTER_CMD_RSA_SIGN_DATA_NOPAD_REQUEST;

	typedef struct {
		ANDROID_HECI_AGENT_RESP_HEADER Header;
		UINT32 SignatureSize;
		UINT8 Signature[ANDROID_HECI_KEYMASTER_MAX_KEY_SIZE];	// In big-endian
	} ANDROID_HECI_KEYMASTER_CMD_RSA_SIGN_DATA_NOPAD_RESPONSE;

	typedef struct {
		ANDROID_HECI_AGENT_REQ_HEADER Header;
		UINT32 DataSize;
		UINT8 Data[ANDROID_HECI_KEYMASTER_MAX_KEY_SIZE];
		UINT32 SignatureSize;
		UINT8 Signature[ANDROID_HECI_KEYMASTER_MAX_KEY_SIZE];	// In big-endian
		UINT8 KeyOpaque[ANDROID_HECI_KEYMASTER_KEY_OPAQUE_SIZE];
	} ANDROID_HECI_KEYMASTER_CMD_RSA_VERIFY_DATA_NOPAD_REQUEST;

	typedef struct {
		ANDROID_HECI_AGENT_RESP_HEADER Header;
		UINT32 Verified;
	} ANDROID_HECI_KEYMASTER_CMD_RSA_VERIFY_DATA_NOPAD_RESPONSE;

#ifdef __cplusplus
}
#endif				/*  __cplusplus */
#endif				// ANDROID_HECI_AGENT_H_
